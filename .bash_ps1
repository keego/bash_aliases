
# source .bash_colors

# Various variables you might want for your PS1 prompt instead
Time12h="\T"
Time12a="\@"
PathShort="\W"
PathFull="\w"
NewLine="\n"
Jobs="\j"
PromptSymbol="$Green>$Color_Off"

command_exists () {
  type "$1" > /dev/null 2>&1 ;
}

if command_exists scutil ; then
  # OS X
  COMPUTER_NAME="$(scutil --get ComputerName)"
else
  # Standard
  COMPUTER_NAME="\h"
fi

source ~/.git-completion.bash
source ~/.git-prompt.sh

parse-git-branch () {

  git branch &>/dev/null
  if [ "$?" -eq 0 ]; then 
    echo `git status` | grep "nothing to commit" > /dev/null 2>&1
    if [ "$?" -eq "0" ]; then
      # @4 - Clean repository - nothing to commit
      echo -n "$Green$(__git_ps1 " (%s)")$Color_Off"
    else
      # @5 - Changes to working tree
      echo -n "$IRed$(__git_ps1 " {%s}")$Color_Off"
    fi
    echo " $Blue"
  else
    # @2 - Prompt when not in GIT repo
    echo " $Yellow"
  fi
}

set-ps1 () {
  local comp_color="$1"
  local comp_name="$comp_color$COMPUTER_NAME$Color_Off"
  local user_name="$IBlack(\u)$Color_Off"
  local shell_cmd="$IBlack$ShellName$Color_Off"

  local time="$IBlack"'$(date "+%r")'"$Color_Off"
  local path_short="$PathShort$Color_Off"
  local path_full="$PathFull$Color_Off"

  PS1=''
  PS1+=$'\n'"$comp_name $user_name $shell_cmd"
  PS1+=$'\n'"$time "'$(parse-git-branch)'"$path_full"
  PS1+=$'\n'"$PromptSymbol "
}

set-ps1 $Yellow
